
src/string.o:     file format elf32-i386


Disassembly of section .text:

00000000 <memcpy>:
   0:	55                   	push   %ebp
   1:	89 e5                	mov    %esp,%ebp
   3:	83 ec 10             	sub    $0x10,%esp
   6:	8b 45 0c             	mov    0xc(%ebp),%eax
   9:	89 45 fc             	mov    %eax,-0x4(%ebp)
   c:	8b 45 08             	mov    0x8(%ebp),%eax
   f:	89 45 f8             	mov    %eax,-0x8(%ebp)
  12:	eb 17                	jmp    2b <memcpy+0x2b>
  14:	8b 45 fc             	mov    -0x4(%ebp),%eax
  17:	0f b6 10             	movzbl (%eax),%edx
  1a:	8b 45 f8             	mov    -0x8(%ebp),%eax
  1d:	88 10                	mov    %dl,(%eax)
  1f:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
  23:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
  27:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
  2b:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
  2f:	75 e3                	jne    14 <memcpy+0x14>
  31:	8b 45 08             	mov    0x8(%ebp),%eax
  34:	c9                   	leave  
  35:	c3                   	ret    

00000036 <memset>:
  36:	55                   	push   %ebp
  37:	89 e5                	mov    %esp,%ebp
  39:	83 ec 14             	sub    $0x14,%esp
  3c:	8b 45 0c             	mov    0xc(%ebp),%eax
  3f:	88 45 ec             	mov    %al,-0x14(%ebp)
  42:	8b 45 08             	mov    0x8(%ebp),%eax
  45:	89 45 fc             	mov    %eax,-0x4(%ebp)
  48:	eb 11                	jmp    5b <memset+0x25>
  4a:	8b 45 fc             	mov    -0x4(%ebp),%eax
  4d:	0f b6 55 ec          	movzbl -0x14(%ebp),%edx
  51:	88 10                	mov    %dl,(%eax)
  53:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
  57:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
  5b:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
  5f:	75 e9                	jne    4a <memset+0x14>
  61:	c9                   	leave  
  62:	c3                   	ret    

00000063 <memsetw>:
  63:	55                   	push   %ebp
  64:	89 e5                	mov    %esp,%ebp
  66:	83 ec 14             	sub    $0x14,%esp
  69:	8b 45 0c             	mov    0xc(%ebp),%eax
  6c:	66 89 45 ec          	mov    %ax,-0x14(%ebp)
  70:	8b 45 08             	mov    0x8(%ebp),%eax
  73:	89 45 fc             	mov    %eax,-0x4(%ebp)
  76:	eb 12                	jmp    8a <memsetw+0x27>
  78:	8b 45 fc             	mov    -0x4(%ebp),%eax
  7b:	0f b7 55 ec          	movzwl -0x14(%ebp),%edx
  7f:	66 89 10             	mov    %dx,(%eax)
  82:	83 45 fc 02          	addl   $0x2,-0x4(%ebp)
  86:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
  8a:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
  8e:	75 e8                	jne    78 <memsetw+0x15>
  90:	c9                   	leave  
  91:	c3                   	ret    

00000092 <memmove>:
  92:	55                   	push   %ebp
  93:	89 e5                	mov    %esp,%ebp
  95:	83 ec 2c             	sub    $0x2c,%esp
  98:	8b 55 08             	mov    0x8(%ebp),%edx
  9b:	8b 45 0c             	mov    0xc(%ebp),%eax
  9e:	39 c2                	cmp    %eax,%edx
  a0:	73 1e                	jae    c0 <memmove+0x2e>
  a2:	8b 45 10             	mov    0x10(%ebp),%eax
  a5:	89 44 24 08          	mov    %eax,0x8(%esp)
  a9:	8b 45 0c             	mov    0xc(%ebp),%eax
  ac:	89 44 24 04          	mov    %eax,0x4(%esp)
  b0:	8b 45 08             	mov    0x8(%ebp),%eax
  b3:	89 04 24             	mov    %eax,(%esp)
  b6:	e8 fc ff ff ff       	call   b7 <memmove+0x25>
  bb:	e9 a5 00 00 00       	jmp    165 <memmove+0xd3>
  c0:	8b 45 08             	mov    0x8(%ebp),%eax
  c3:	83 e0 03             	and    $0x3,%eax
  c6:	85 c0                	test   %eax,%eax
  c8:	75 5f                	jne    129 <memmove+0x97>
  ca:	8b 45 0c             	mov    0xc(%ebp),%eax
  cd:	83 e0 03             	and    $0x3,%eax
  d0:	85 c0                	test   %eax,%eax
  d2:	75 55                	jne    129 <memmove+0x97>
  d4:	8b 45 10             	mov    0x10(%ebp),%eax
  d7:	83 e0 03             	and    $0x3,%eax
  da:	85 c0                	test   %eax,%eax
  dc:	75 4b                	jne    129 <memmove+0x97>
  de:	8b 45 08             	mov    0x8(%ebp),%eax
  e1:	89 45 f8             	mov    %eax,-0x8(%ebp)
  e4:	8b 45 0c             	mov    0xc(%ebp),%eax
  e7:	89 45 f4             	mov    %eax,-0xc(%ebp)
  ea:	8b 45 10             	mov    0x10(%ebp),%eax
  ed:	c1 e8 02             	shr    $0x2,%eax
  f0:	89 45 fc             	mov    %eax,-0x4(%ebp)
  f3:	eb 2c                	jmp    121 <memmove+0x8f>
  f5:	8b 45 fc             	mov    -0x4(%ebp),%eax
  f8:	83 e8 01             	sub    $0x1,%eax
  fb:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 102:	8b 45 f8             	mov    -0x8(%ebp),%eax
 105:	01 c2                	add    %eax,%edx
 107:	8b 45 fc             	mov    -0x4(%ebp),%eax
 10a:	83 e8 01             	sub    $0x1,%eax
 10d:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
 114:	8b 45 f4             	mov    -0xc(%ebp),%eax
 117:	01 c8                	add    %ecx,%eax
 119:	8b 00                	mov    (%eax),%eax
 11b:	89 02                	mov    %eax,(%edx)
 11d:	83 6d fc 01          	subl   $0x1,-0x4(%ebp)
 121:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
 125:	75 ce                	jne    f5 <memmove+0x63>
 127:	eb 39                	jmp    162 <memmove+0xd0>
 129:	8b 45 08             	mov    0x8(%ebp),%eax
 12c:	89 45 f0             	mov    %eax,-0x10(%ebp)
 12f:	8b 45 0c             	mov    0xc(%ebp),%eax
 132:	89 45 ec             	mov    %eax,-0x14(%ebp)
 135:	8b 45 10             	mov    0x10(%ebp),%eax
 138:	89 45 fc             	mov    %eax,-0x4(%ebp)
 13b:	eb 1f                	jmp    15c <memmove+0xca>
 13d:	8b 45 fc             	mov    -0x4(%ebp),%eax
 140:	8d 50 ff             	lea    -0x1(%eax),%edx
 143:	8b 45 f0             	mov    -0x10(%ebp),%eax
 146:	01 c2                	add    %eax,%edx
 148:	8b 45 fc             	mov    -0x4(%ebp),%eax
 14b:	8d 48 ff             	lea    -0x1(%eax),%ecx
 14e:	8b 45 ec             	mov    -0x14(%ebp),%eax
 151:	01 c8                	add    %ecx,%eax
 153:	0f b6 00             	movzbl (%eax),%eax
 156:	88 02                	mov    %al,(%edx)
 158:	83 6d fc 01          	subl   $0x1,-0x4(%ebp)
 15c:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
 160:	75 db                	jne    13d <memmove+0xab>
 162:	8b 45 08             	mov    0x8(%ebp),%eax
 165:	c9                   	leave  
 166:	c3                   	ret    

00000167 <strcpy>:
 167:	55                   	push   %ebp
 168:	89 e5                	mov    %esp,%ebp
 16a:	8b 45 0c             	mov    0xc(%ebp),%eax
 16d:	0f b6 10             	movzbl (%eax),%edx
 170:	8b 45 08             	mov    0x8(%ebp),%eax
 173:	88 10                	mov    %dl,(%eax)
 175:	83 45 08 01          	addl   $0x1,0x8(%ebp)
 179:	8b 45 0c             	mov    0xc(%ebp),%eax
 17c:	0f b6 00             	movzbl (%eax),%eax
 17f:	84 c0                	test   %al,%al
 181:	0f 95 c0             	setne  %al
 184:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
 188:	84 c0                	test   %al,%al
 18a:	75 de                	jne    16a <strcpy+0x3>
 18c:	5d                   	pop    %ebp
 18d:	c3                   	ret    

0000018e <strlen>:
 18e:	55                   	push   %ebp
 18f:	89 e5                	mov    %esp,%ebp
 191:	83 ec 10             	sub    $0x10,%esp
 194:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 19b:	eb 04                	jmp    1a1 <strlen+0x13>
 19d:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 1a1:	8b 45 08             	mov    0x8(%ebp),%eax
 1a4:	0f b6 00             	movzbl (%eax),%eax
 1a7:	84 c0                	test   %al,%al
 1a9:	0f 95 c0             	setne  %al
 1ac:	83 45 08 01          	addl   $0x1,0x8(%ebp)
 1b0:	84 c0                	test   %al,%al
 1b2:	75 e9                	jne    19d <strlen+0xf>
 1b4:	8b 45 fc             	mov    -0x4(%ebp),%eax
 1b7:	c9                   	leave  
 1b8:	c3                   	ret    
